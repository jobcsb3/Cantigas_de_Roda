#include <stdio.h>
#include "pico/stdlib.h"
#include "hardware/adc.h"
#include "hardware/gpio.h"
#include "pico/stdio.h"
#include "pico/time.h"
#include "hardware/i2c.h"
#include "pico-ssd1306/ssd1306.h"

// Definições dos pinos
#define VRX_PIN 27  // ADC1
#define VRY_PIN 26  // ADC0
#define SW_PIN  22  // Botão

#define I2C_SDA 14
#define I2C_SCL 15

// Display
ssd1306_t display;

void atualizar_display(int x, int y, int sw) {
    char linha1[20], linha2[20];
    sprintf(linha1, "VRx: %d", x);
    sprintf(linha2, "VRy: %d | SW: %d", y, sw);

    ssd1306_clear(&display);
    ssd1306_draw_string(&display, 0, 0, 1, linha1);
    ssd1306_draw_string(&display, 0, 16, 1, linha2);
    ssd1306_show(&display);
}

int main() {
    stdio_init_all();
    sleep_ms(1000);  // Aguarda o terminal USB

    // Inicializa ADC
    adc_init();
    adc_gpio_init(VRX_PIN);
    adc_gpio_init(VRY_PIN);

    // Inicializa pino do botão SW
    gpio_init(SW_PIN);
    gpio_set_dir(SW_PIN, GPIO_IN);
    gpio_pull_up(SW_PIN);  // Botão vai para GND quando pressionado

    // Inicializa I2C e display OLED
    i2c_init(i2c0, 400 * 1000);
    gpio_set_function(I2C_SDA, GPIO_FUNC_I2C);
    gpio_set_function(I2C_SCL, GPIO_FUNC_I2C);
    gpio_pull_up(I2C_SDA);
    gpio_pull_up(I2C_SCL);

    ssd1306_init(&display, 128, 64, i2c0, 0x3C, false);
    ssd1306_clear(&display);
    ssd1306_show(&display);

    while (true) {
        // Lê VRx (ADC1)
        adc_select_input(1);
        int vrx = adc_read();

        // Lê VRy (ADC0)
        adc_select_input(0);
        int vry = adc_read();

        // Lê SW (botão)
        int sw = gpio_get(SW_PIN) == 0 ? 1 : 0; // 1 = pressionado

        // Mostrar no terminal
        printf("VRx: %d | VRy: %d | SW: %s\n", vrx, vry, sw ? "Pressionado" : "Solto");

        // Mostrar no display
        atualizar_display(vrx, vry, sw);

        sleep_ms(200);
    }

    return 0;
}
